plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.star.cla"
        multiDexEnabled true
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    def KEYSTORE_FILE_PATH = '../buildapk/inforcharge.jks'
    def KEYSTORE_ALIAS = 'Inforcharge'
    def KEYSTORE_PASSWORD = 'Inforcharge99'
    signingConfigs {
        release {
            storeFile file("${KEYSTORE_FILE_PATH}")
            storePassword "${KEYSTORE_PASSWORD}"
            keyAlias "${KEYSTORE_ALIAS}"
            keyPassword "${KEYSTORE_PASSWORD}"
        }
    }

    def runTest = false
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            lintOptions {
                disable 'MissingTranslation'
                checkReleaseBuilds false
                // Or, if you prefer, you can continue to check for errors in release builds,
                // but continue the build even when errors are found:
                abortOnError false
            }
            // customize
            buildConfigField("boolean", "RUN_TEST", "Boolean.parseBoolean(\"$runTest\")")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.release
            lintOptions {
                disable 'MissingTranslation'
                checkReleaseBuilds false
                // Or, if you prefer, you can continue to check for errors in release builds,
                // but continue the build even when errors are found:
                abortOnError false
            }
            buildConfigField("boolean", "RUN_TEST", "Boolean.parseBoolean(\"false\")")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
//    dexOptions {
//        javaMaxHeapSize "4G"
//    }
}

dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':data')
    implementation project(path: ':extension')
    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'com.jakewharton:butterknife:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.jakewharton.rxrelay2:rxrelay:2.1.1"
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.github.aliab:Two-Step-Picker-Dialog:V1.1.0'
    //  --------------------- 處理狀態欄/導航列顏色 -----------------
    // 基础依赖包，必须要依赖
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    // kotlin扩展（可选）
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    // fragment快速实现（可选）已废弃
    implementation 'com.geyifeng.immersionbar:immersionbar-components:3.2.2'
    //  --------------------- 處理狀態欄/導航列顏色 -----------------
    // OkHttp
    def okhttp_version = '4.9.0' // 4.9.0 / 3.12.1
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp_version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    def glide_version = "4.13.0"
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"
    def viewpager2_version = '1.1.0-alpha01'
    implementation "androidx.viewpager2:viewpager2:$viewpager2_version"
    // ANR
    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'
    // xCrash
    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.0.0'
    // Koin
    def koin_version = '3.2.0'
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.reactivex.rxjava3:rxjava:3.0.0"
    implementation 'com.google.code.gson:gson:2.9.0'
    //---------------------------- TESTING ----------------------------//
    def junit_x_ext = '1.1.1'
    def testx_rules = '1.3.0'
    def android_arch_core_testing = '1.1.1'
    def mockk_version = '1.11.0'
    def espresso_contrib = '3.3.0'
    def mockwebserver_version = '4.1.0'
    def koin_test_version = '3.2.0'
    def test_runner_version = '1.1.1'
    def fragment_version = "1.2.4"
    androidTestImplementation "androidx.fragment:fragment-testing:$fragment_version"
    // androidTest
    androidTestImplementation "androidx.test.ext:junit:$junit_x_ext"
    androidTestImplementation "androidx.test:rules:$testx_rules"
    androidTestImplementation "android.arch.core:core-testing:$android_arch_core_testing"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    androidTestImplementation "io.insert-koin:koin-test:$koin_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_contrib"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    androidTestImplementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    androidTestImplementation('org.mockito:mockito-android:4.6.1')
    // test
    testImplementation "io.insert-koin:koin-test:$koin_test_version"
    testImplementation "androidx.test.ext:junit:$junit_x_ext"
    testImplementation "android.arch.core:core-testing:$android_arch_core_testing"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    testImplementation "androidx.test:runner:$test_runner_version"
}